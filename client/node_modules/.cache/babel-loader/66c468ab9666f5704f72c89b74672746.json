{"ast":null,"code":"/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we're using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it's a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\nimport axios from 'axios';\nimport ListCard from '../components/ListCard';\nconst api = axios.create({\n  baseURL: 'http://localhost:4000/api'\n}); // THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\n\nexport const createPlaylist = num => api.post('/playlist', {\n  name: \"Untitled \" + num,\n  songs: []\n});\nexport const getAllPlaylists = () => api.get(`/playlists`);\nexport const getPlaylistPairs = () => api.get('playlistpairs ');\nexport const getPlaylistById = id => api.get(`/playlist/${id}`);\nconst apis = {\n  createPlaylist,\n  getAllPlaylists,\n  getPlaylistPairs,\n  getPlaylistById\n};\nexport default apis;","map":{"version":3,"names":["axios","ListCard","api","create","baseURL","createPlaylist","num","post","name","songs","getAllPlaylists","get","getPlaylistPairs","getPlaylistById","id","apis"],"sources":["/Users/mikeybudney/Desktop/Playlister_HW3/client/src/api/index.js"],"sourcesContent":["/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we're using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it's a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\n\nimport axios from 'axios'\nimport ListCard from '../components/ListCard'\nconst api = axios.create({\n    baseURL: 'http://localhost:4000/api',\n})\n\n// THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\nexport const createPlaylist = (num) => api.post('/playlist', {name: (\"Untitled \" + num), songs: []});\nexport const getAllPlaylists = () => api.get(`/playlists`)\nexport const getPlaylistPairs = () => api.get('playlistpairs ')\nexport const getPlaylistById = (id) => api.get(`/playlist/${id}`)\n\nconst apis = {\n    createPlaylist,\n    getAllPlaylists,\n    getPlaylistPairs,\n    getPlaylistById\n}\n\nexport default apis\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;EACrBC,OAAO,EAAE;AADY,CAAb,CAAZ,C,CAIA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAIC,GAAD,IAASJ,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsB;EAACC,IAAI,EAAG,cAAcF,GAAtB;EAA4BG,KAAK,EAAE;AAAnC,CAAtB,CAAhC;AACP,OAAO,MAAMC,eAAe,GAAG,MAAMR,GAAG,CAACS,GAAJ,CAAS,YAAT,CAA9B;AACP,OAAO,MAAMC,gBAAgB,GAAG,MAAMV,GAAG,CAACS,GAAJ,CAAQ,gBAAR,CAA/B;AACP,OAAO,MAAME,eAAe,GAAIC,EAAD,IAAQZ,GAAG,CAACS,GAAJ,CAAS,aAAYG,EAAG,EAAxB,CAAhC;AAEP,MAAMC,IAAI,GAAG;EACTV,cADS;EAETK,eAFS;EAGTE,gBAHS;EAITC;AAJS,CAAb;AAOA,eAAeE,IAAf"},"metadata":{},"sourceType":"module"}