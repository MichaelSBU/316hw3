{"ast":null,"code":"/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we're using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it's a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\nimport axios from 'axios';\nimport ListCard from '../components/ListCard';\nconst api = axios.create({\n  baseURL: 'http://localhost:4000/api'\n}); // THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\n\nexport const createPlaylist = num => api.post('/playlist', {\n  name: \"Untitled \" + num,\n  songs: []\n});\nexport const updatePlaylist = (id, nam, song) => api.put(`/playlist/${id}`, {\n  name: nam,\n  songs: song\n});\nexport const getAllPlaylists = () => api.get(`/playlists`);\nexport const getPlaylistPairs = () => api.get('playlistpairs');\nexport const getPlaylistById = id => api.get(`/playlist/${id}`);\nexport const deletePlaylist = id => api.delete(`/deletePlaylist/${id}`);\nconst apis = {\n  createPlaylist,\n  updatePlaylist,\n  getAllPlaylists,\n  getPlaylistPairs,\n  getPlaylistById,\n  deletePlaylist\n};\nexport default apis;","map":{"version":3,"names":["axios","ListCard","api","create","baseURL","createPlaylist","num","post","name","songs","updatePlaylist","id","nam","song","put","getAllPlaylists","get","getPlaylistPairs","getPlaylistById","deletePlaylist","delete","apis"],"sources":["/Users/mikeybudney/Desktop/Playlister_HW3/client/src/api/index.js"],"sourcesContent":["/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we're using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it's a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\n\nimport axios from 'axios'\nimport ListCard from '../components/ListCard'\nconst api = axios.create({\n    baseURL: 'http://localhost:4000/api',\n})\n\n// THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\nexport const createPlaylist = (num) => api.post('/playlist', {name: (\"Untitled \" + num), songs: []});\nexport const updatePlaylist = (id, nam, song) => api.put(`/playlist/${id}`, {name: nam, songs: song});\nexport const getAllPlaylists = () => api.get(`/playlists`)\nexport const getPlaylistPairs = () => api.get('playlistpairs')\nexport const getPlaylistById = (id) => api.get(`/playlist/${id}`)\nexport const deletePlaylist = (id) => api.delete(`/deletePlaylist/${id}`)\n\nconst apis = {\n    createPlaylist,\n    updatePlaylist,\n    getAllPlaylists,\n    getPlaylistPairs,\n    getPlaylistById,\n    deletePlaylist\n}\n\nexport default apis\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;EACrBC,OAAO,EAAE;AADY,CAAb,CAAZ,C,CAIA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAIC,GAAD,IAASJ,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsB;EAACC,IAAI,EAAG,cAAcF,GAAtB;EAA4BG,KAAK,EAAE;AAAnC,CAAtB,CAAhC;AACP,OAAO,MAAMC,cAAc,GAAG,CAACC,EAAD,EAAKC,GAAL,EAAUC,IAAV,KAAmBX,GAAG,CAACY,GAAJ,CAAS,aAAYH,EAAG,EAAxB,EAA2B;EAACH,IAAI,EAAEI,GAAP;EAAYH,KAAK,EAAEI;AAAnB,CAA3B,CAA1C;AACP,OAAO,MAAME,eAAe,GAAG,MAAMb,GAAG,CAACc,GAAJ,CAAS,YAAT,CAA9B;AACP,OAAO,MAAMC,gBAAgB,GAAG,MAAMf,GAAG,CAACc,GAAJ,CAAQ,eAAR,CAA/B;AACP,OAAO,MAAME,eAAe,GAAIP,EAAD,IAAQT,GAAG,CAACc,GAAJ,CAAS,aAAYL,EAAG,EAAxB,CAAhC;AACP,OAAO,MAAMQ,cAAc,GAAIR,EAAD,IAAQT,GAAG,CAACkB,MAAJ,CAAY,mBAAkBT,EAAG,EAAjC,CAA/B;AAEP,MAAMU,IAAI,GAAG;EACThB,cADS;EAETK,cAFS;EAGTK,eAHS;EAITE,gBAJS;EAKTC,eALS;EAMTC;AANS,CAAb;AASA,eAAeE,IAAf"},"metadata":{},"sourceType":"module"}